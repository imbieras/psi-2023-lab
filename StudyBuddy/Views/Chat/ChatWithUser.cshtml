@model StudyBuddy.Controllers.ChatController.ChatViewModel;

@{
    ViewBag.Title = "Chat";
    Layout = "_Layout";
}

<input type="hidden" id="userId" value="@Model.CurrentUser.Id"/>
<input type="hidden" id="userName" value="@Model.CurrentUser.Name"/>
<input type="hidden" id="receiverId" value="@Model.OtherUser.Id"/>
<input type="hidden" id="receiverName" value="@Model.OtherUser.Name"/>
<input type="hidden" id="senderAvatar" value="@Model.CurrentUser.Traits.AvatarPath"/>
<input type="hidden" id="receiverAvatar" value="@Model.OtherUser.Traits.AvatarPath"/>
<input type="hidden" id="groupName" value="@Model.GroupName"/>

<div class="container vh-100 d-flex flex-column">
    <div class="card min-vh-100 d-flex flex-column">
        <div class="row flex-grow-1">
            <div class="col-12 col-lg-5 col-xl-3 border-end">
                <div class="px-4 d-none d-md-block">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <input type="text" class="form-control my-3" id="searchInput" placeholder="Search...">
                        </div>
                    </div>
                </div>
                <ul id="userList" class="list-group flex-grow-1">
                    @if (Model.Matches.Any())
                    {
                        @foreach (var user in Model.Matches)
                        {
                            <li class="list-group-item border border-0 user-list-item">
                                <div class="d-flex align-items-start">
                                    <a href="@Url.Action("ChatWithUser", "Chat", new { otherUserId = user!.Id })">
                                        <img src="@user.Traits.AvatarPath" class="rounded-circle me-1" alt="@user.Name" width="40" height="40">
                                    </a>
                                    <div class="fw-bold flex-grow-1 ms-3 user-name">
                                        @user.Name
                                    </div>
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="list-group-item border border-0 d-flex align-items-center justify-content-center">
                            <div class="text-center">
                                No available chatters
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <div class="col-12 col-lg-7 col-xl-9">
                <div class="py-2 px-4 border-bottom d-none d-lg-block">
                    <div class="d-flex align-items-center py-1">
                        <div class="position-relative">
                            <!-- Display the receiver's avatar and name -->
                            <img src="@Model.OtherUser.Traits.AvatarPath" class="rounded-circle me-1" alt="@Model.OtherUser.Name" width="40" height="40">
                        </div>
                        <div class="flex-grow-1 px-3">
                            <strong>@Model.OtherUser.Name</strong>
                        </div>
                    </div>
                </div>
                <div class="position-relative d-flex flex-column flex-grow-1">
                    <div class="chat-messages p-4 flex-grow-1" id="messagesList">
                        <!-- Messages will be added here using JavaScript -->
                        @foreach (var message in Model.Messages)
                        {
                            var isCurrentUser = message.SenderUserId == Model.CurrentUser.Id;
                            <div class="@(isCurrentUser ? "chat-message-right" : "chat-message-left") pb-4">
                                <div>
                                    <img src="@(isCurrentUser ? Model.CurrentUser.Traits.AvatarPath : Model.OtherUser.Traits.AvatarPath)"
                                         class="rounded-circle me-1" alt="@(isCurrentUser ? Model.CurrentUser.Name : Model.OtherUser.Name)" width="40" height="40">
                                    <div class="text-muted small text-nowrap mt-2">@message.Timestamp.ToString("HH:mm")</div>
                                </div>
                                <div class="flex-shrink-1 bg-light rounded py-2 px-3 @(isCurrentUser ? "me-3" : "ms-3")">
                                    <div class="fw-bold mb-1">@(isCurrentUser ? "You" : Model.OtherUser.Name)</div>
                                    <div class="text-break">
                                        @message.Content
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="flex-grow-0 py-3 px-4 border-top">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Type your message" id="messageInput">
                        <button class="btn btn-primary" id="sendButton">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
        window.onload = function () {
            document.getElementById('messageInput').focus();
        };

        // Function to handle the key press event
        document.getElementById('messageInput').addEventListener('keypress', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                let message = document.getElementById('messageInput').value.trim(); // Check the message content
                if (message !== '') {
                    document.getElementById('sendButton').click();
                }
            }
        });

</script>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>
<script src="~/js/search.js"></script>
