@using StudyBuddy.Abstractions
@using StudyBuddy.Services.UserService
@using StudyBuddy.Services.UserSessionService
@inject IUserService UserService
@inject IUserSessionService UserSessionService

@{
    var currentUserId = UserSessionService.GetCurrentUserId();
    IUser? user = null;

    if (currentUserId != null)
    {
        user = await UserService.GetUserByIdAsync(currentUserId.Value);
    }
}

<ul class="navbar-nav ml-auto">
    <li class="nav-item">
        @if (user != null)
        {
            <a class="nav-link text-dark">Logged in as: <b>@user.Name</b></a>
        }
        else
        {
            <a class="nav-link text-dark" asp-area="" asp-controller="Profile" asp-action="Login">Login</a>
        }
    </li>
</ul>
@if (user != null)
{
    <div class="btn-group">
        <form method="post" asp-controller="Profile" asp-action="Logout">
            <button type="submit" class="btn btn-danger">Logout</button>
        </form>
        <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="visually-hidden">Toggle Dropdown</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            <li>
                <form method="get" asp-controller="Profile" asp-action="EditProfile">
                    <button type="submit" class="dropdown-item">Edit Profile</button>
                </form>
            </li>
        </ul>
    </div>
}
